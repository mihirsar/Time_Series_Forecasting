{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":7216411,"sourceType":"datasetVersion","datasetId":4176241}],"dockerImageVersionId":30626,"isInternetEnabled":true,"language":"python","sourceType":"script","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:07:47.412156Z\",\"iopub.execute_input\":\"2023-12-17T10:07:47.412868Z\",\"iopub.status.idle\":\"2023-12-17T10:07:47.694000Z\",\"shell.execute_reply.started\":\"2023-12-17T10:07:47.412835Z\",\"shell.execute_reply\":\"2023-12-17T10:07:47.693127Z\"}}\n# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session\n\ndf = pd.read_csv('/kaggle/input/champagne-sales-for-time-series/perrin-freres-monthly-champagne-.csv')\ndf.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:08:14.233998Z\",\"iopub.execute_input\":\"2023-12-17T10:08:14.234309Z\",\"iopub.status.idle\":\"2023-12-17T10:08:14.238759Z\",\"shell.execute_reply.started\":\"2023-12-17T10:08:14.234285Z\",\"shell.execute_reply\":\"2023-12-17T10:08:14.237839Z\"}}\ndf['sales'] = df['Perrin Freres monthly champagne sales millions ?64-?72'] \n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:09:41.584912Z\",\"iopub.execute_input\":\"2023-12-17T10:09:41.585526Z\",\"iopub.status.idle\":\"2023-12-17T10:09:41.595296Z\",\"shell.execute_reply.started\":\"2023-12-17T10:09:41.585500Z\",\"shell.execute_reply\":\"2023-12-17T10:09:41.594422Z\"}}\ndf.drop('Perrin Freres monthly champagne sales millions ?64-?72', axis=1, inplace=True)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:09:48.986512Z\",\"iopub.execute_input\":\"2023-12-17T10:09:48.986834Z\",\"iopub.status.idle\":\"2023-12-17T10:09:48.992521Z\",\"shell.execute_reply.started\":\"2023-12-17T10:09:48.986808Z\",\"shell.execute_reply\":\"2023-12-17T10:09:48.991730Z\"}}\ndf.columns\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:09:51.303841Z\",\"iopub.execute_input\":\"2023-12-17T10:09:51.304158Z\",\"iopub.status.idle\":\"2023-12-17T10:09:51.313037Z\",\"shell.execute_reply.started\":\"2023-12-17T10:09:51.304133Z\",\"shell.execute_reply\":\"2023-12-17T10:09:51.312212Z\"}}\ndf.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:09:53.189077Z\",\"iopub.execute_input\":\"2023-12-17T10:09:53.189911Z\",\"iopub.status.idle\":\"2023-12-17T10:09:53.421708Z\",\"shell.execute_reply.started\":\"2023-12-17T10:09:53.189887Z\",\"shell.execute_reply\":\"2023-12-17T10:09:53.421121Z\"}}\ndf.plot()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:09:55.588035Z\",\"iopub.execute_input\":\"2023-12-17T10:09:55.588739Z\",\"iopub.status.idle\":\"2023-12-17T10:09:55.596135Z\",\"shell.execute_reply.started\":\"2023-12-17T10:09:55.588712Z\",\"shell.execute_reply\":\"2023-12-17T10:09:55.595332Z\"}}\ndf.isna().sum()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:09:56.684052Z\",\"iopub.execute_input\":\"2023-12-17T10:09:56.684354Z\",\"iopub.status.idle\":\"2023-12-17T10:09:56.690359Z\",\"shell.execute_reply.started\":\"2023-12-17T10:09:56.684331Z\",\"shell.execute_reply\":\"2023-12-17T10:09:56.689424Z\"}}\ndf.drop(106, axis=0, inplace=True)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:09:58.326588Z\",\"iopub.execute_input\":\"2023-12-17T10:09:58.326983Z\",\"iopub.status.idle\":\"2023-12-17T10:09:58.332703Z\",\"shell.execute_reply.started\":\"2023-12-17T10:09:58.326920Z\",\"shell.execute_reply\":\"2023-12-17T10:09:58.331916Z\"}}\ndf.drop(105, axis=0, inplace=True)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:10:00.197413Z\",\"iopub.execute_input\":\"2023-12-17T10:10:00.197762Z\",\"iopub.status.idle\":\"2023-12-17T10:10:00.206338Z\",\"shell.execute_reply.started\":\"2023-12-17T10:10:00.197735Z\",\"shell.execute_reply\":\"2023-12-17T10:10:00.205528Z\"}}\ndf.tail()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:10:01.266957Z\",\"iopub.execute_input\":\"2023-12-17T10:10:01.267780Z\",\"iopub.status.idle\":\"2023-12-17T10:10:01.273673Z\",\"shell.execute_reply.started\":\"2023-12-17T10:10:01.267745Z\",\"shell.execute_reply\":\"2023-12-17T10:10:01.272828Z\"}}\ndf.Month.dtype\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:10:03.511893Z\",\"iopub.execute_input\":\"2023-12-17T10:10:03.512245Z\",\"iopub.status.idle\":\"2023-12-17T10:10:03.519598Z\",\"shell.execute_reply.started\":\"2023-12-17T10:10:03.512219Z\",\"shell.execute_reply\":\"2023-12-17T10:10:03.518923Z\"}}\ndf[\"Month\"] = pd.to_datetime(df[\"Month\"])\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:13:13.604795Z\",\"iopub.execute_input\":\"2023-12-17T10:13:13.605146Z\",\"iopub.status.idle\":\"2023-12-17T10:13:13.610141Z\",\"shell.execute_reply.started\":\"2023-12-17T10:13:13.605118Z\",\"shell.execute_reply\":\"2023-12-17T10:13:13.609031Z\"}}\ndf.set_index('Month', inplace=True)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:13:16.138341Z\",\"iopub.execute_input\":\"2023-12-17T10:13:16.138639Z\",\"iopub.status.idle\":\"2023-12-17T10:13:16.642552Z\",\"shell.execute_reply.started\":\"2023-12-17T10:13:16.138612Z\",\"shell.execute_reply\":\"2023-12-17T10:13:16.641885Z\"}}\nfrom statsmodels.tsa.stattools import adfuller\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:13:23.870092Z\",\"iopub.execute_input\":\"2023-12-17T10:13:23.870410Z\",\"iopub.status.idle\":\"2023-12-17T10:13:23.888781Z\",\"shell.execute_reply.started\":\"2023-12-17T10:13:23.870385Z\",\"shell.execute_reply\":\"2023-12-17T10:13:23.888087Z\"}}\ntest_result = adfuller(df.sales)\n\n# %% [markdown]\n# ### Hypothesis testing\n# #### H0 = not stationery\n# #### H1 = stationery\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:25:08.977580Z\",\"iopub.execute_input\":\"2023-12-17T10:25:08.977906Z\",\"iopub.status.idle\":\"2023-12-17T10:25:08.982824Z\",\"shell.execute_reply.started\":\"2023-12-17T10:25:08.977878Z\",\"shell.execute_reply\":\"2023-12-17T10:25:08.982170Z\"}}\ndef adfuller_test(sales):\n    result = adfuller(sales)\n    labels = ['ADF_Test_Statistic', 'p-value', '#Lags_used', 'No. of observation used']\n    for value, label in zip(result, labels):\n        print(label+' : '+str(value))\n    if result[1] <= 0.05:\n        print(\"Strong evident against H0, reject null hypothesis\")\n    else:\n        print(\"Weak evidence, H0 is true\")\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:25:09.999404Z\",\"iopub.execute_input\":\"2023-12-17T10:25:09.999971Z\",\"iopub.status.idle\":\"2023-12-17T10:25:10.009243Z\",\"shell.execute_reply.started\":\"2023-12-17T10:25:09.999923Z\",\"shell.execute_reply\":\"2023-12-17T10:25:10.008621Z\"}}\nadfuller_test(df.sales)\n\n# %% [markdown]\n# #### Differencing\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:25:13.490535Z\",\"iopub.execute_input\":\"2023-12-17T10:25:13.493252Z\",\"iopub.status.idle\":\"2023-12-17T10:25:13.498906Z\",\"shell.execute_reply.started\":\"2023-12-17T10:25:13.493206Z\",\"shell.execute_reply\":\"2023-12-17T10:25:13.498232Z\"}}\ndf['sales_first_diff'] = df['sales'] - df['sales'].shift(1)\n\n# Creating the 'seasonal_first_diff' column containing the seasonal (lag 12) difference of 'sales'\ndf['seasonal_first_diff'] = df['sales'] - df['sales'].shift(12)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:25:15.510349Z\",\"iopub.execute_input\":\"2023-12-17T10:25:15.510935Z\",\"iopub.status.idle\":\"2023-12-17T10:25:15.521370Z\",\"shell.execute_reply.started\":\"2023-12-17T10:25:15.510904Z\",\"shell.execute_reply\":\"2023-12-17T10:25:15.520411Z\"}}\ndf.head()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:25:18.518879Z\",\"iopub.execute_input\":\"2023-12-17T10:25:18.519405Z\",\"iopub.status.idle\":\"2023-12-17T10:25:18.531222Z\",\"shell.execute_reply.started\":\"2023-12-17T10:25:18.519379Z\",\"shell.execute_reply\":\"2023-12-17T10:25:18.530401Z\"}}\nadfuller_test(df.seasonal_first_diff.dropna())\n\n# %% [markdown]\n# #### Therefore data is stationery\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:25:21.490248Z\",\"iopub.execute_input\":\"2023-12-17T10:25:21.490887Z\",\"iopub.status.idle\":\"2023-12-17T10:25:21.767806Z\",\"shell.execute_reply.started\":\"2023-12-17T10:25:21.490853Z\",\"shell.execute_reply\":\"2023-12-17T10:25:21.766715Z\"}}\ndf.seasonal_first_diff.plot()\n\n# %% [markdown]\n# ## Auto Regressive Model\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:25:25.711137Z\",\"iopub.execute_input\":\"2023-12-17T10:25:25.711443Z\",\"iopub.status.idle\":\"2023-12-17T10:25:25.715864Z\",\"shell.execute_reply.started\":\"2023-12-17T10:25:25.711418Z\",\"shell.execute_reply\":\"2023-12-17T10:25:25.714799Z\"}}\nimport matplotlib.pyplot as plt\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:25:29.296140Z\",\"iopub.execute_input\":\"2023-12-17T10:25:29.296440Z\",\"iopub.status.idle\":\"2023-12-17T10:25:29.304931Z\",\"shell.execute_reply.started\":\"2023-12-17T10:25:29.296417Z\",\"shell.execute_reply\":\"2023-12-17T10:25:29.303774Z\"}}\ndf.sales\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:25:36.683621Z\",\"iopub.execute_input\":\"2023-12-17T10:25:36.683972Z\",\"iopub.status.idle\":\"2023-12-17T10:25:36.873909Z\",\"shell.execute_reply.started\":\"2023-12-17T10:25:36.683926Z\",\"shell.execute_reply\":\"2023-12-17T10:25:36.872857Z\"}}\n# Plotting autocorrelation using autocorrelation_plot\npd.plotting.autocorrelation_plot(df['sales'])\nplt.title('Autocorrelation Plot of Sales')\nplt.xlabel('Lag')\nplt.ylabel('Autocorrelation')\nplt.show()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:25:40.275015Z\",\"iopub.execute_input\":\"2023-12-17T10:25:40.275309Z\",\"iopub.status.idle\":\"2023-12-17T10:25:40.283455Z\",\"shell.execute_reply.started\":\"2023-12-17T10:25:40.275286Z\",\"shell.execute_reply\":\"2023-12-17T10:25:40.282652Z\"}}\nfrom statsmodels.graphics.tsaplots import plot_acf, plot_pacf\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:25:42.406809Z\",\"iopub.execute_input\":\"2023-12-17T10:25:42.407122Z\",\"iopub.status.idle\":\"2023-12-17T10:25:43.396085Z\",\"shell.execute_reply.started\":\"2023-12-17T10:25:42.407099Z\",\"shell.execute_reply\":\"2023-12-17T10:25:43.395120Z\"}}\nimport statsmodels.api as sm\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:25:45.136414Z\",\"iopub.execute_input\":\"2023-12-17T10:25:45.136722Z\",\"iopub.status.idle\":\"2023-12-17T10:25:45.603431Z\",\"shell.execute_reply.started\":\"2023-12-17T10:25:45.136696Z\",\"shell.execute_reply\":\"2023-12-17T10:25:45.602810Z\"}}\nfig = plt.figure(figsize=(12,8))\nax1 = fig.add_subplot(211)\nfig = sm.graphics.tsa.plot_acf(df['seasonal_first_diff'].iloc[13:], lags=40, ax=ax1)\nax2 = fig.add_subplot(212)\nfig = sm.graphics.tsa.plot_pacf(df['seasonal_first_diff'].iloc[13:], lags=40, ax=ax2)\n\n# %% [markdown]\n# #### When data is nonseasonal use ARIMA\n# #### When data is seasonal use SARIMAX\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:25:49.056697Z\",\"iopub.execute_input\":\"2023-12-17T10:25:49.057243Z\",\"iopub.status.idle\":\"2023-12-17T10:25:49.063504Z\",\"shell.execute_reply.started\":\"2023-12-17T10:25:49.057214Z\",\"shell.execute_reply\":\"2023-12-17T10:25:49.062511Z\"}}\n# For non-seaasonal data\nfrom statsmodels.tsa.arima_model import ARIMA\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:28:06.217039Z\",\"iopub.execute_input\":\"2023-12-17T10:28:06.217661Z\",\"iopub.status.idle\":\"2023-12-17T10:28:20.386142Z\",\"shell.execute_reply.started\":\"2023-12-17T10:28:06.217633Z\",\"shell.execute_reply\":\"2023-12-17T10:28:20.385206Z\"}}\npip install statsmodels --upgrade\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:29:09.213240Z\",\"iopub.execute_input\":\"2023-12-17T10:29:09.213526Z\",\"iopub.status.idle\":\"2023-12-17T10:29:09.713872Z\",\"shell.execute_reply.started\":\"2023-12-17T10:29:09.213503Z\",\"shell.execute_reply\":\"2023-12-17T10:29:09.713225Z\"}}\nfrom statsmodels.tsa.statespace.sarimax import SARIMAX\n\n# Assuming 'sales' is a column in your DataFrame 'df'\n\n# Create and fit a SARIMAX model\nmodel = SARIMAX(df['sales'], order=(1, 1, 1), seasonal_order=(1, 1, 1, 12))  # SARIMAX model with order and seasonal_order\nmodel_fit = model.fit()\n\n# Summary of the fitted model\nprint(model_fit.summary())\n\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:38:34.377507Z\",\"iopub.execute_input\":\"2023-12-17T10:38:34.377802Z\",\"iopub.status.idle\":\"2023-12-17T10:38:34.740969Z\",\"shell.execute_reply.started\":\"2023-12-17T10:38:34.377781Z\",\"shell.execute_reply\":\"2023-12-17T10:38:34.740019Z\"}}\ndf['forecast']=model_fit.predict(start=90,end=103,dynamic=True)\ndf[['sales','forecast']].plot(figsize=(12,8))\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:39:07.136081Z\",\"iopub.execute_input\":\"2023-12-17T10:39:07.136414Z\",\"iopub.status.idle\":\"2023-12-17T10:39:07.600897Z\",\"shell.execute_reply.started\":\"2023-12-17T10:39:07.136389Z\",\"shell.execute_reply\":\"2023-12-17T10:39:07.600172Z\"}}\nmodel=sm.tsa.statespace.SARIMAX(df['sales'],order=(1, 1, 1),seasonal_order=(1,1,1,12))\nresults=model.fit()\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:39:33.749670Z\",\"iopub.execute_input\":\"2023-12-17T10:39:33.750876Z\",\"iopub.status.idle\":\"2023-12-17T10:39:34.090680Z\",\"shell.execute_reply.started\":\"2023-12-17T10:39:33.750850Z\",\"shell.execute_reply\":\"2023-12-17T10:39:34.089893Z\"}}\ndf['forecast']=results.predict(start=90,end=103,dynamic=True)\ndf[['sales','forecast']].plot(figsize=(12,8))\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:40:04.962312Z\",\"iopub.execute_input\":\"2023-12-17T10:40:04.963232Z\",\"iopub.status.idle\":\"2023-12-17T10:40:04.982868Z\",\"shell.execute_reply.started\":\"2023-12-17T10:40:04.963202Z\",\"shell.execute_reply\":\"2023-12-17T10:40:04.981766Z\"}}\nimport pickle\nwith open('sarimax_model.pkl', 'wb') as f:\n    pickle.dump(model_fit, f)\n\n# %% [code] {\"execution\":{\"iopub.status.busy\":\"2023-12-17T10:40:29.028862Z\",\"iopub.execute_input\":\"2023-12-17T10:40:29.029193Z\",\"iopub.status.idle\":\"2023-12-17T10:40:29.040387Z\",\"shell.execute_reply.started\":\"2023-12-17T10:40:29.029167Z\",\"shell.execute_reply\":\"2023-12-17T10:40:29.039482Z\"}}\nwith open('sarimax_model.pkl', 'rb') as f:\n    loaded_model = pickle.load(f)\n\n# %% [code]\n","metadata":{"_uuid":"e0648922-9e60-4f54-a757-abd7c3df29b5","_cell_guid":"1e32cd61-e29d-4626-9ab4-679a5cd5e431","collapsed":false,"jupyter":{"outputs_hidden":false},"trusted":true},"execution_count":null,"outputs":[]}]}